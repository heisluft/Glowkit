From 568f2b5b341109f106b99339a178c9a3aee9df47 Mon Sep 17 00:00:00 2001
From: momothereal <momothereal.mc@gmail.com>
Date: Thu, 27 Dec 2018 19:23:38 -0500
Subject: [PATCH] 1.13-HACK: Add new Particle class


diff --git a/src/main/java/org/bukkit/Particle.java b/src/main/java/org/bukkit/Particle.java
index cc9c2c5e..db6158c9 100644
--- a/src/main/java/org/bukkit/Particle.java
+++ b/src/main/java/org/bukkit/Particle.java
@@ -1,5 +1,6 @@
 package org.bukkit;
 
+import com.google.common.base.Preconditions;
 import org.bukkit.inventory.ItemStack;
 import org.bukkit.material.MaterialData;
 
@@ -32,9 +33,8 @@ public enum Particle {
     ENCHANTMENT_TABLE,
     FLAME,
     LAVA,
-    FOOTSTEP,
     CLOUD,
-    REDSTONE,
+    REDSTONE(DustOptions.class),
     SNOWBALL,
     SNOW_SHOVEL,
     SLIME,
@@ -44,7 +44,6 @@ public enum Particle {
     BLOCK_CRACK(MaterialData.class),
     BLOCK_DUST(MaterialData.class),
     WATER_DROP,
-    ITEM_TAKE,
     MOB_APPEARANCE,
     DRAGON_BREATH,
     END_ROD,
@@ -52,7 +51,17 @@ public enum Particle {
     SWEEP_ATTACK,
     FALLING_DUST(MaterialData.class),
     TOTEM,
-    SPIT;
+    SPIT,
+    SQUID_INK,
+    BUBBLE_POP,
+    CURRENT_DOWN,
+    BUBBLE_COLUMN_UP,
+    NAUTILUS,
+    DOLPHIN,
+    // ----- Legacy Separator -----
+    LEGACY_BLOCK_CRACK(MaterialData.class),
+    LEGACY_BLOCK_DUST(MaterialData.class),
+    LEGACY_FALLING_DUST(MaterialData.class);
 
     private final Class<?> dataType;
 
@@ -72,12 +81,37 @@ public enum Particle {
         return dataType;
     }
 
-    // Paper start - Particle API expansion
     /**
-     * Creates a {@link com.destroystokyo.paper.ParticleBuilder}
+     * Options which can be applied to redstone dust particles - a particle
+     * color and size.
      */
-    public com.destroystokyo.paper.ParticleBuilder builder() {
-        return new com.destroystokyo.paper.ParticleBuilder(this);
+    public static class DustOptions {
+
+        private final Color color;
+        private final float size;
+
+        public DustOptions(Color color, float size) {
+            Preconditions.checkArgument(color != null, "color");
+            this.color = color;
+            this.size = size;
+        }
+
+        /**
+         * The color of the particles to be displayed.
+         *
+         * @return particle color
+         */
+        public Color getColor() {
+            return color;
+        }
+
+        /**
+         * Relative size of the particle.
+         *
+         * @return relative particle size
+         */
+        public float getSize() {
+            return size;
+        }
     }
-    // Paper end
 }
-- 
2.11.0.windows.1

